dist: bionic
language: ruby
rvm:
- 2.7.3
services:
- postgresql
addons:
  postgresql: '10'
  apt:
    packages:
    - postgresql-10
    - postgresql-client-10
cache:
  - bundler
env:
  global:
  - CF_ORG=ccs-document-upload
  - secure: "mwnGX+1xElZW9qni7IwgRn6RW8d/FNGdL+jsfGn5JzsV608yCIX4lt0xIEFPAjMLYhJEMcpZC5Lmk7VhmaPNVkx35PghGPtpaWb7mD9FAdvjVhuwDV7xvH0Kz8neuMjotRjVadmpEyHrspf8NGX8xLEuZjrN6UHZrRu3IxN433FtinLpOzxST0vWtLZ/VWbrSgda80xQfGnMhOlqzY5MwUvr3Q85dpE8SY8bRko3LZUl5yiHhjxXeoxw7MyCrN0fvU1l3HXUQvjJxa8sdvPUfVViOT0QEoZ4NGXrxn4SrSHfL4zquUo2+2lImooPh+rw56zJuRD4e2BWLNOMpdnTDAAJMdBEWvToaZI/rbsXuBkJ+tZjeDdqB/05IsN7OMCKJbAq8q9xaNfwx8bEcAM4QWOYQEMcVN9gEZaE0ETRE27cpTqpuFK2T4GTi46IcleoQd89mvuQuzqn3cnd9VLJ64OLJUeJhXflvyLIyHunWqWR1da6hKy2m9dW7iU2SiXS5qwqO2heoCLDXVKfL0ag5wCWzmY1JwPx5FYDuKMkHnEW6imwDzo8RwAhov1K7luyPMN43LoNcSyPVZ1j+TVS5PrLzEKiVqw9MxQHS7bzD7eTaErBW9NjeHZ6UvrhEOw88S1+zNa4fZU973fULs5FN0VHPDkwvefXKW5O9tkNKZE="
before_install:
  - gem install bundler -v 2.1.4
install:
  - bundle install --jobs=3 --retry=3
before_script:
  - psql -c 'create database ccs_conclave_document_get_test;' -U postgres
  - bundle exec rake db:schema:load
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
before_deploy:
  - echo "install cloudfoundry cli"
  - wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
  - echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
  - sudo apt-get update -qq
  - sudo apt-get install cf7-cli
deploy:
  - provider: script
    script: bash CF/deploy-app.sh -u $CF_USER -o $CF_ORG -p $CF_PASS -s sandbox
    on:
      branch: sandbox
  - provider: script
    script: bash CF/deploy-app.sh -u $CF_USER -o $CF_ORG -p $CF_PASS -s development
    on:
      branch: develop
  - provider: script
    script: bash CF/deploy-app.sh -u $CF_USER -o $CF_ORG -p $CF_PASS -s pre-production
    on:
      branch: preprod
  - provider: script
    script: bash CF/deploy-app.sh -u $CF_USER -o $CF_ORG -p $CF_PASS -s production
    on:
      branch: main
after_script:
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT